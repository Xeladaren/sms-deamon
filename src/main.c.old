	if (init()){

		pthread_t readThread ;

		pthread_create(&readThread, NULL, &readThreadFunction, NULL);

		sleep(1) ;

		while(1) {

			char command[100] ;
			char writeMSG[102] ;

			memset(command, 0, 100) ;
			memset(writeMSG, 0, 102) ;

			scanf("%s", command) ;

			if(!strcmp("quit", command)){
				printf("QUIT\n");

				break ;
			}
			else if(!strcmp("pin?", command)){

				write(ttyS0, "AT+CPIN?\n\r", 15) ;

			}
			else if(!strcmp("buffer", command)){

				for (int i = 0; i < BUFF_SIZE; ++i) {

					if(i == bufferIndex)
						printf("%02d-> ", i);
					else
						printf("%02d > ", i);

					if (buffer[i] == NULL) {
						printf("NULL\n");
					}
					else {
						printf("%s\n", buffer[i]);
					}
				}

			}
			else if(!strcmp("hexBuffer", command)){

				for (int i = 0; i < BUFF_SIZE; ++i) {

					printf("%02d > ", i);

					if (buffer[i] == NULL) {
						printf("NULL\n");
					}
					else {
						for (int j = 0; j < STRING_SIZE; ++j)
						{
							printf("%02X ", buffer[i][j]);
							if (buffer[i][j] == 0)
							{
								break ;
							}
						}
						printf("\n");
					}
				}

			}
			else if(!strcmp("pin", command)){

				char pin[5] ;

				printf("PIN : ");
				scanf("%s", pin);
				sprintf(writeMSG, "AT+CPIN=%s\n\r", pin);

				write(ttyS0, writeMSG, 102) ;

			}
			else if(!strcmp("custom", command)){

				char custom[100] ;
				memset(custom, 0, 100) ;

				printf("CUSTOM COMMEND : ");
				scanf("%s", custom);
				sprintf(writeMSG, "%s\n\r", custom);

				write(ttyS0, writeMSG, 102) ;

			}
			else if(!strcmp("strCustom", command)){

				char custom[100] ;
				memset(custom, 0, 100) ;

				printf("CUSTOM COMMEND : ");
				scanf("%s", custom);
				sprintf(writeMSG, "%s", custom);

				write(ttyS0, writeMSG, 102) ;

			}
			else if(!strcmp("hexCustom", command)){

				unsigned int custom = 0 ;

				printf("CUSTOM COMMEND : ");
				scanf("%X", &custom);
				//sprintf(writeMSG, "%s", custom);

				char c = (char)custom ;

				write(ttyS0, &c, 1) ;

			}
			else if(!strcmp("sms", command)){

				/*char num[15] ;
				char msg[12] = "TEST SMS" ;
				msg[8] = 0x1a ;
				msg[9] = '\n' ;
				msg[10] = '\r' ;
				msg[11] = 0x00 ;*/

				// AT+CMGF=1
				// AT+CPMS="SM","SM","SM"

				//printf("NUMERO : ");
				//scanf("%s", num);
				
				//printf("MESSAGE : ");
				//scanf("%s", msg);

				write(ttyS0, "AT+CMGF=1\n\r", 15) ;

				sleep(5) ;

				//sprintf(writeMSG, "AT+CMGS=%s\n\r", num);

				char num[] = "0664491084" ;
				char msg[] = "TEST SMS" ;

				size_t numLen = strlen(num) ;
				size_t msgLen = strlen(msg) ;

				char * send = malloc(12+numLen) ;

				memset(send, 0, 12+numLen) ;
				sprintf(send, "AT+CMGW=%d,2\n\r", msgLen);

				write(ttyS0, send, 12+numLen) ;

				char c = 0 ;

				while(c != '>') {


					pthread_mutex_lock(&bufferMutex) ;

					if(!strcmp("ERROR", buffer[bufferIndex])){
						goto quit ; // TODO : A CHANGER !!!!
					}

					c = buffer[bufferIndex][0] ;
					pthread_mutex_unlock(&bufferMutex) ;

					//printf("char = %c\n", c);

					usleep(1000) ;
				}

				free(send) ;

				send = malloc(msgLen+3);

				memcpy(send, msg, msgLen);

				send[msgLen] 	= '\r' ;
				send[msgLen+1] 	= SUB ;
				send[msgLen+2] 	= '\r' ;
				send[msgLen+3] 	= 0 ;

				write(ttyS0, send, msgLen+3) ;

				quit:

				free(send) ;

				//sleep(5) ;

				//printf("msg");

				//write(ttyS0, msg, 12) ;

			}

			//sprintf(writeMSG, "%s\n\r", command);

			

		}

//		char writeMSG[100] = "AT+CPIN=\"0000\"\r\n" ;
//		char writeMSG[100] = "AT+CPIN?\n\r" ;

//		size = write(ttyS0, writeMSG, 100) ;

		pthread_cancel(readThread) ;

		close(ttyS0) ;
	}
	else{
		printf("ERROR : open /dev/ttyS0 %d\n", ttyS0);
	}